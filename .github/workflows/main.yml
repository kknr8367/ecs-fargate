name: Terraform web-servers

on:
  push:
    branches:
      - main

permissions:
  id-token: write   # Required for OIDC
  contents: read    # Required to clone the repo
            
jobs:
  terraform:
    runs-on: ubuntu-latest 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::111225938018:role/github-oidc-auth
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

 
      # - name: Terraform Format Check
      #   run: terraform fmt -check -recursive
      #   continue-on-error: false
         
      - name: Terraform Init (Dev)
        working-directory: ./environments/dev
        run: terraform init
 
      - name: Terraform Validate
        working-directory: ./environments/dev
        run: terraform validate
 
      - name: Terraform Import
        working-directory: ./environments/dev
        run: terraform import 'module.s3_bucket.aws_s3_bucket.bucket' mxu-np-lv-sqlserver-backuprestore1
 
      - name: Terraform Plan
        working-directory: ./environments/dev
        run: terraform plan -no-color
        continue-on-error: false
 
      - name: Terraform State List
        working-directory: ./environments/dev
        run: terraform state list
 














      # - name: Terraform Init
      #   id: init
      #   run: terraform init

      # # - name: Terraform Format
      # #   id: fmt
      # #   run: terraform fmt -check

      # - name: Terraform Validate
      #   id: validate
      #   run: terraform validate

      # - name: Terraform Plan
      #   id: plan
      #   # if: github.event_name == 'pull_request'
      #   run: terraform plan -no-color
      #   # env:
      #     # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Required for commenting on PRs

      # # - name: Terraform Apply
      # #   id: apply
      # #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      # #   run: terraform apply -auto-approve

      # - name: Terraform destroy
      #   id: destroy
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: terraform destroy -auto-approve
